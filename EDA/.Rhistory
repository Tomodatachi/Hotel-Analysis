install.packages("dplyr")
install.packages("ggplot2")
install.packages("plotly")
# Create 3D scatter plot
plot_ly(
data = df,
x = ~score,
y = ~price_2_adultsnight,
z = ~stars,
type = "scatter3d",
mode = "markers",
marker = list(size = 4, color = ~stars, colorscale = "Viridis", showscale = TRUE)
) %>%
layout(
title = "3D Scatter Plot of Score, Price, and Stars",
scene = list(
xaxis = list(title = "Score"),
yaxis = list(title = "Price for 2 Adults per Night"),
zaxis = list(title = "Stars")
)
)
library(dplyr)  # This includes %>%
plot_ly(
data = df,
x = ~score,
y = ~price_2_adultsnight,
z = ~stars,
type = "scatter3d",
mode = "markers",
marker = list(size = 4, color = ~stars, colorscale = "Viridis", showscale = TRUE)
) %>%
layout(
title = "3D Scatter Plot of Score, Price, and Stars",
scene = list(
xaxis = list(title = "Score"),
yaxis = list(title = "Price for 2 Adults per Night"),
zaxis = list(title = "Stars")
)
)
library(plotly)
library(dplyr)  # This includes %>%
# Make sure stars is numeric
df <- df %>%
mutate(stars = as.integer(if_else(grepl("^[0-9]+$", stars), stars, NA_character_)))
library(plotly)
library(dplyr)  # This includes %>%
# Make sure stars is numeric
df <- cleaned_bookings.csv
combined_bookings <- read.csv("//wsl.localhost/Ubuntu-22.04/home/ngocadmin/airflow/data/combined_bookings.csv")
View(combined_bookings)
library(plotly)
library(dplyr)  # This includes %>%
# Make sure stars is numeric
df <- cleaned_bookings.csv
library(plotly)
library(dplyr)  # This includes %>%
# Make sure stars is numeric
df <- cleaned_bookings.csv
cleaned_bookings <- read.csv("//wsl.localhost/Ubuntu-22.04/home/ngocadmin/airflow/data/cleaned_bookings.csv")
View(cleaned_bookings)
library(plotly)
library(dplyr)  # This includes %>%
# Make sure stars is numeric
df <- cleaned_bookings.csv
df <- cleaned_bookings.csv
df <- read.table('cleaned_bookings.csv')
library(plotly)
library(dplyr)  # This includes %>%
# Make sure stars is numeric
df <- cleaned_bookings
df <- df %>%
mutate(stars = as.integer(if_else(grepl("^[0-9]+$", stars), stars, NA_character_)))
library(plotly)
library(dplyr)  # This includes %>%
# Make sure stars is numeric
df <- cleaned_bookings
df$stars <- as.integer(df$stars)
# Create 3D scatter plot
plot_ly(
data = df,
x = ~score,
y = ~price_2_adultsnight,
z = ~stars,
type = "scatter3d",
mode = "markers",
marker = list(size = 4, color = ~stars, colorscale = "Viridis", showscale = TRUE)
) %>%
layout(
title = "3D Scatter Plot of Score, Price, and Stars",
scene = list(
xaxis = list(title = "Score"),
yaxis = list(title = "Price for 2 Adults per Night"),
zaxis = list(title = "Stars")
)
)
library(plotly)
library(dplyr)  # This includes %>%
# Make sure stars is numeric
df <- cleaned_bookings
df$stars <- as.integer(df$stars)
# Create 3D scatter plot
plot_ly(
data = df,
x = ~stars,
y = ~price_2_adultsnight,
z = ~score,
type = "scatter3d",
mode = "markers",
marker = list(size = 4, color = ~stars, colorscale = "Viridis", showscale = TRUE)
) %>%
layout(
title = "3D Scatter Plot of Score, Price, and Stars",
scene = list(
xaxis = list(title = "Stars"),
yaxis = list(title = "Price for 2 Adults per Night"),
zaxis = list(title = "Scores")
)
)
library(plotly)
library(dplyr)  # This includes %>%
# Make sure stars is numeric
df <- cleaned_bookings
df$stars <- as.integer(df$stars)
# Create 3D scatter plot
plot_ly(
data = df,
x = ~price_2_adultsnight,
y = ~stars,
z = ~score,
type = "scatter3d",
mode = "markers",
marker = list(size = 4, color = ~stars, colorscale = "Viridis", showscale = TRUE)
) %>%
layout(
title = "3D Scatter Plot of Score, Price, and Stars",
scene = list(
xaxis = list(title = "Price for 2 Adults per Night"),
yaxis = list(title = "Stars"),
zaxis = list(title = "Scores")
)
)
summary(df$price_2_adultsnight)
summary(df$score)
summary(df$stars)
# Score
ggplot(df, aes(x = score)) +
geom_histogram(binwidth = 0.5, fill = "skyblue", color = "white") +
labs(title = "Score Distribution", x = "Score", y = "Count") +
theme_minimal()
# Price
ggplot(df, aes(x = price_2_adultsnight)) +
geom_histogram(binwidth = 50, fill = "salmon", color = "white") +
labs(title = "Price Distribution", x = "Price", y = "Count") +
theme_minimal()
# Stars
ggplot(df, aes(x = stars)) +
geom_bar(fill = "lightgreen", color = "white") +
labs(title = "Stars Distribution", x = "Stars", y = "Count") +
theme_minimal()
ggplot(df, aes(x = score)) +
geom_histogram(binwidth = 0.5, fill = "skyblue", color = "white") +
labs(title = "Score Distribution", x = "Score", y = "Count") +
theme_minimal()
ggplot(df, aes(x = price_2_adultsnight)) +
geom_histogram(binwidth = 50, fill = "salmon", color = "white") +
labs(title = "Price Distribution", x = "Price", y = "Count") +
theme_minimal()
ggplot(df, aes(x = price_2_adultsnight/100)) +
geom_histogram(binwidth = 50, fill = "salmon", color = "white") +
labs(title = "Price Distribution", x = "Price", y = "Count") +
theme_minimal()
ggplot(df, aes(x = stars)) +
geom_bar(fill = "lightgreen", color = "white") +
labs(title = "Stars Distribution", x = "Stars", y = "Count") +
theme_minimal()
ggplot(df, aes(x = factor(stars), y = price_2_adultsnight)) +
geom_boxplot(fill = "lightblue", color = "darkblue") +
labs(
title = "Price Distribution by Star Rating",
x = "Stars",
y = "Price for 2 Adults per Night"
) +
theme_minimal()
ggplot(df, aes(x = factor(stars), y = price_2_adultsnight)) +
geom_boxplot(fill = "lightblue", color = "darkblue") +
labs(
title = "Price Distribution by Star Rating",
x = "Stars",
y = "Price for 2 Adults per Night"
) +
theme_minimal()
ggplot(df, aes(y = score)) +
geom_boxplot(fill = "skyblue", color = "darkblue") +
labs(title = "Boxplot of Review Score", y = "Score") +
theme_minimal()
